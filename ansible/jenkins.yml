--- # CICD Pipline Project
- name: Configure Jenkins Servers 
  hosts: jenkins 
  gather_facts: no
  become: yes
  # -- you don't need to specify a user because when using ansible with vagrant it will connect with the user named "vagrant" by default. You could however override this. Same thing goes for the "connection" option, ssh is used by default.
  #user: vagrant
  #connection: ssh
  tasks:
    - name: Install Epel Repo
      action: yum name=epel-release state=installed

    - name: Download and Install Jenkins Repo
      get_url:
        url: http://pkg.jenkins-ci.org/redhat/jenkins.repo
        dest: /etc/yum.repos.d/jenkins.repo

    - name: Download and install Jenkins Repo Key
    #  command: rpm --import https://jenkins-ci.org/redhat/jenkins-ci.org.key warn=false
      rpm_key: 
        state: present
        key: https://jenkins-ci.org/redhat/jenkins-ci.org.key

    # ==================================================================
    # This is another way to download and install the Jenkins Repo GPG Key
    # The purpose for doing it in 2 steps (downloading the key first, then
    # installing with the "gpg --import" command is to avoid the warning
    # suggestion that comes up when the playbook is running to use "yum" 
    # instead of "rpm". At this point, it's not installing the key when
    # using "gpg --import" so I need to research and figure out why...

    #- name: Download Jenkins Repo GPG Key
    #  get_url:
    #    url: https://jenkins-ci.org/redhat/jenkins-ci.org.key
    #    dest: /home/vagrant/jenkins-ci.org.key

    #- name: Install Jenkins Repo GPG Key
    #  command: gpg --import /home/vagrant/jenkins-ci.org.key

    # ==================================================================

    - name: Install Java 1.8.0 JDK
      action: yum name=java-1.8.0-openjdk state=installed

    - name: Install Jenkins Server
      action: yum name=jenkins state=installed

    - name: Start and Enable Jenkins
      action: systemd name=jenkins state=started enabled=yes
